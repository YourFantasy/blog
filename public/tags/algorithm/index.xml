<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithm on 编程浪子</title>
    <link>https://www.bardblog.cn/tags/algorithm/</link>
    <description>Recent content in algorithm on 编程浪子</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <managingEditor>cz950601@gmail.com (Bard)</managingEditor>
    <webMaster>cz950601@gmail.com (Bard)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 16 Sep 2023 08:59:43 +0800</lastBuildDate>
    <atom:link href="https://www.bardblog.cn/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>连通块点数最大值</title>
      <link>https://www.bardblog.cn/algorithm-dfs-acwing-846/</link>
      <pubDate>Sat, 24 Jun 2023 12:57:40 +0800</pubDate><author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/algorithm-dfs-acwing-846/</guid>
      <description>题目描述 给定一颗树，树中包含 n 个结点（编号 1∼n）和 n−1 条无向边。 请你找到树的重心，并输出将重心删除后，剩余各个连通块中点数的最大值。 重心</description>
    </item>
    <item>
      <title>迷宫最小的移动次数</title>
      <link>https://www.bardblog.cn/algorithm-bfs-acwing-844/</link>
      <pubDate>Sat, 24 Jun 2023 12:57:40 +0800</pubDate><author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/algorithm-bfs-acwing-844/</guid>
      <description>题目描述 给定一个 n×m 的二维整数数组，用来表示一个迷宫，数组中只包含 0 或 1，其中 0 表示可以走的路，1 表示不可通过的墙壁。 最初，有一个人位于左</description>
    </item>
    <item>
      <title>最大不相交区间数量</title>
      <link>https://www.bardblog.cn/algorithm-greedy-disjoint/</link>
      <pubDate>Sat, 24 Jun 2023 12:57:40 +0800</pubDate><author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/algorithm-greedy-disjoint/</guid>
      <description>题目描述 给定 N个闭区间 [ai,bi]，请你在数轴上选择若干个区间，使得选中的区间之间互不相交（包括端点）。 输出可选取区间的最大数量。 输入格式</description>
    </item>
    <item>
      <title>LFU和LRU缓存淘汰算法</title>
      <link>https://www.bardblog.cn/algorithm-cache-obsolescence/</link>
      <pubDate>Sat, 16 Sep 2023 08:59:43 +0800</pubDate><author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/algorithm-cache-obsolescence/</guid>
      <description></description>
    </item>
    <item>
      <title>一致性hash算法</title>
      <link>https://www.bardblog.cn/consistent-hash/</link>
      <pubDate>Sun, 09 Jul 2023 16:08:27 +0800</pubDate><author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/consistent-hash/</guid>
      <description></description>
    </item>
    <item>
      <title>zset分析与实现</title>
      <link>https://www.bardblog.cn/redis-zset-implemention/</link>
      <pubDate>Thu, 06 Jul 2023 12:49:02 +0800</pubDate><author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/redis-zset-implemention/</guid>
      <description>概念 跳表是一种很特殊的数据结构，可以把跳表理解为一个多层链表，每一层都是一个有序链表，链表之间通过指针连接，并且最底层的那个链表保存跳表完整</description>
    </item>
  </channel>
</rss>
