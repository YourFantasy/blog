<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>technology on 编程浪子</title>
    <link>https://www.bardblog.cn/en/categories/technology/</link>
    <description>Recent content in technology on 编程浪子</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>cz950601@gmail.com (Bard)</managingEditor>
    <webMaster>cz950601@gmail.com (Bard)</webMaster>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 01 Jul 2023 08:59:43 +0800</lastBuildDate><atom:link href="https://www.bardblog.cn/en/categories/technology/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Factory Pattern</title>
      <link>https://www.bardblog.cn/en/desigin-pattern-factory/</link>
      <pubDate>Mon, 26 Jun 2023 12:57:40 +0800</pubDate>
      <author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/en/desigin-pattern-factory/</guid>
      <description>The Factory Method pattern is a creational design pattern that provides a way to delegate the creation of objects to subclasses. In the Factory Method pattern, an abstract factory class defines an interface for creating objects, but the specific object creation is deferred to the subclasses.
Simple Factory Pattern The Simple Factory pattern, also known as the Static Method pattern, defines a static method in the object creation factory class to create objects.</description>
    </item>
    
    <item>
      <title>Maximum Size of Connected Components</title>
      <link>https://www.bardblog.cn/en/algorithm-bfs-acwing-844/</link>
      <pubDate>Sat, 24 Jun 2023 12:57:40 +0800</pubDate>
      <author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/en/algorithm-bfs-acwing-844/</guid>
      <description>Problem Description Given an n×m 2D integer array representing a maze, where the array contains only 0s and 1s, with 0 representing a path that can be traversed and 1 representing an impassable wall.
Initially, there is a person at the top-left corner (1, 1). It is known that the person can move one position in any direction: up, down, left, or right.
The task is to determine the minimum number of moves required for the person to reach the bottom-right corner (n, m).</description>
    </item>
    
    <item>
      <title>Maximum Size of Connected Components</title>
      <link>https://www.bardblog.cn/en/algorithm-dfs-acwing-846/</link>
      <pubDate>Sat, 24 Jun 2023 12:57:40 +0800</pubDate>
      <author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/en/algorithm-dfs-acwing-846/</guid>
      <description>Problem Description Given a tree with n nodes (numbered 1 to n) and n-1 undirected edges.
Please find the centroid of the tree and output the maximum number of nodes in each remaining connected component after removing the centroid.
Centroid Definition: The centroid of a tree is a node such that if it is removed, the maximum number of nodes in each remaining connected component is minimized.
Input Format The first line contains an integer n, representing the number of nodes in the tree.</description>
    </item>
    
    <item>
      <title>Maximum Non-overlapping Intervals</title>
      <link>https://www.bardblog.cn/en/algorithm-greedy-disjoint/</link>
      <pubDate>Sat, 24 Jun 2023 12:57:40 +0800</pubDate>
      <author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/en/algorithm-greedy-disjoint/</guid>
      <description>Problem Description Given N closed intervals [ai, bi], you need to select a subset of intervals on the number line such that the selected intervals do not overlap with each other (including the endpoints).
Output the maximum number of intervals that can be selected.
Input Format The first line contains an integer N, representing the number of intervals.
The next N lines contain two integers ai and bi each, representing the endpoints of an interval.</description>
    </item>
    
    <item>
      <title>Core Concepts of MySQL</title>
      <link>https://www.bardblog.cn/en/interview/</link>
      <pubDate>Sat, 01 Jul 2023 08:59:43 +0800</pubDate>
      <author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/en/interview/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Core Concepts of MySQL</title>
      <link>https://www.bardblog.cn/en/mysql-core-concepts/</link>
      <pubDate>Sat, 01 Jul 2023 08:59:43 +0800</pubDate>
      <author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/en/mysql-core-concepts/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Advanced Usage of Git</title>
      <link>https://www.bardblog.cn/en/git-advanced-usage/</link>
      <pubDate>Tue, 27 Jun 2023 00:01:52 +0800</pubDate>
      <author>cz950601@gmail.com (Bard)</author>
      <guid>https://www.bardblog.cn/en/git-advanced-usage/</guid>
      <description>Git Submodules Concept Git submodules allow you to include another Git repository as a subdirectory within your main (parent) repository. Each submodule is an independent Git project with its own commits, pull requests, and pushes. The parent repository includes multiple submodules as part of its structure.
Example Let&amp;rsquo;s walk through an example to understand how to use Git submodules.
Create a folder named &amp;ldquo;gitSubmodules&amp;rdquo; and initialize it as a Git repository:</description>
    </item>
    
  </channel>
</rss>
