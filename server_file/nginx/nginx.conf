# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user root;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
    # 开启gzip
    gzip on;
    # 启用gzip压缩的最小文件，小于设置值的文件将不会压缩
    gzip_min_length 1k;
    # gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间，后面会有详细说明
    gzip_comp_level 5;
    # 进行压缩的文件类型。javascript有多种形式。其中的值可以在 mime.types 文件中找到。
    gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/vnd.ms-fontobject font/ttf font/opentype font/x-woff image/svg+xml;
    # 是否在http header中添加Vary: Accept-Encoding，建议开启
    gzip_vary on;
    # 禁用IE 6 gzip
    gzip_disable "MSIE [1-6]\.";
    # 设置压缩所需要的缓冲区大小     
    gzip_buffers 32 4k;

    # 配置http
    server {
        # 要配置的第二个地方，80访问端口
        listen       80 default_server; 
        listen       [::]:80 default_server;
        
        # 要配置的第三个地方，域名
        server_name www.bardblog.cn;
        rewrite ^(.*) https://$server_name$1 permanent; #自动从http跳转到https
        # 要配置的第四个地方，这里指向public文件夹
        root /home/bardchen/software/hugo/blog/public;

        include /etc/nginx/default.d/*.conf;
        
        # 要配置的第五个地方
        location / {
            root /home/bardchen/software/hugo/blog/public;
            index  index.html index.htm;
        }
        
        # 要配置的第六个地方
        error_page 404 /404.html;
        location = /40x.html {
            root   /home/bardchen/software/hugo/blog/public;
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
        # 开启缓存
        location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ { 
            access_log   off; 
            expires      14d;
        }

        location ~* ^.+\.(css|js|txt|xml|swf|wav)$ {
            access_log   off;
            expires      7d;
        }

        location ~* ^.+\.(html|htm)$ {
            expires      12h;
        }

        location ~* ^.+\.(eot|ttf|otf|woff|svg)$ {
            access_log   off;
            expires max;
        }
    }
    
    # 配置https
     server {
         listen       443 ssl http2;
         listen       [::]:443 ssl http2;
         # 要配置的第七个地方
         server_name www.bardblog.cn;
         root /home/bardchen/software/hugo/blog/public;
         
         # 要配置的第八个地方
         ssl_certificate /etc/nginx/bardblog.cn_bundle.crt;
         ssl_certificate_key /etc/nginx/bardblog.cn.key;
         
         # 要配置的第九个地方，可以按照我的写法
         ssl_session_timeout 10m;
         ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
         ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
         ssl_prefer_server_ciphers on;
         
         # 要配置的第十个地方
         error_page 404 /404.html;
         location = /404.html {
              root /home/bardchen/software/hugo/blog/public;
         }

        include /etc/nginx/default.d/*.conf;
          # 开启缓存
        location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ { 
            access_log   off; 
            expires      14d;
        }

        location ~* ^.+\.(css|js|txt|xml|swf|wav)$ {
            access_log   off;
            expires      7d;
        }

        location ~* ^.+\.(html|htm)$ {
            expires      12h;
        }

        location ~* ^.+\.(eot|ttf|otf|woff|svg)$ {
            access_log   off;
            expires max;
        }
     }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2;
#        listen       [::]:443 ssl http2;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        error_page 404 /404.html;
#            location = /40x.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#            location = /50x.html {
#        }
#    }

}

